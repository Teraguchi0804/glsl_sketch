{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap 23689d6cf0425e5fce1d","webpack:///./src/js/app.js","webpack:///./src/js/main.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","checkChange","e","run","currentTarget","checked","startTime","Date","getTime","render","tempTime","time","mouseMove","mx","offsetX","cw","my","offsetY","ch","gl","clear","COLOR_BUFFER_BIT","uniform1f","uniLocation","uniform2fv","drawElements","TRIANGLES","UNSIGNED_SHORT","flush","setTimeout","fps","create_shader","shader","scriptElement","document","getElementById","type","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","text","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","console","log","create_program","vs","fs","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","create_vbo","data","vbo","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","create_ibo","ibo","ELEMENT_ARRAY_BUFFER","Int16Array","eCheck","Array","window","onload","width","height","addEventListener","getContext","prg","getUniformLocation","position","index","vPosition","vIndex","vAttLocation","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","clearColor"],"mappings":"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","file":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cats = __webpack_require__(1);\n\t\n\t// console.log(cats);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// sample_068\n\t//\n\t// GLSL だけでレンダリングする\n\t\n\t// GLSL サンプルの(ほぼ)共通仕様 =============================================\n\t//\n\t// ・シェーダのコンパイルに失敗した場合は auto run を無効にします\n\t// ・auto run は 30fps になっているので環境と負荷に応じて適宜変更しましょう\n\t// ・uniform 変数は以下のようにシェーダへ送られます\n\t//     ・time: 経過時間を秒単位(ミリ秒は小数点以下)で送る(float)\n\t//     ・mouse: マウス座標を canvas 左上原点で 0 ～ 1 の範囲で送る(vec2)\n\t//     ・resolution: スクリーンの縦横の幅をピクセル単位で送る(vec2)\n\t// ・シェーダのコンパイルに失敗した場合エラー内容をアラートとコンソールに出力\n\t// ・シェーダのエラーで表示される行番号は一致するように HTML を書いてあります\n\t//\n\t// ============================================================================\n\t\n\t// global\n\tvar c, cw, ch, mx, my, gl, run, eCheck;\n\tvar startTime;\n\tvar time = 0.0;\n\tvar tempTime = 0.0;\n\tvar fps = 1000 / 30;\n\tvar uniLocation = new Array();\n\t\n\t// onload\n\twindow.onload = function () {\n\t    // canvas エレメントを取得\n\t    c = document.getElementById('canvas');\n\t\n\t    // canvas サイズ\n\t    cw = 512;ch = 512;\n\t    c.width = cw;c.height = ch;\n\t\n\t    // エレメントを取得\n\t    eCheck = document.getElementById('check');\n\t\n\t    // イベントリスナー登録\n\t    c.addEventListener('mousemove', mouseMove, true);\n\t    eCheck.addEventListener('change', checkChange, true);\n\t\n\t    // WebGL コンテキストを取得\n\t    gl = c.getContext('webgl') || c.getContext('experimental-webgl');\n\t\n\t    // シェーダ周りの初期化\n\t    var prg = create_program(create_shader('vs'), create_shader('fs'));\n\t    run = prg != null;if (!run) {\n\t        eCheck.checked = false;\n\t    }\n\t    uniLocation[0] = gl.getUniformLocation(prg, 'time');\n\t    uniLocation[1] = gl.getUniformLocation(prg, 'mouse');\n\t    uniLocation[2] = gl.getUniformLocation(prg, 'resolution');\n\t\n\t    // 頂点データ回りの初期化\n\t    var position = [-1.0, 1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0];\n\t    var index = [0, 2, 1, 1, 2, 3];\n\t    var vPosition = create_vbo(position);\n\t    var vIndex = create_ibo(index);\n\t    var vAttLocation = gl.getAttribLocation(prg, 'position');\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, vPosition);\n\t    gl.enableVertexAttribArray(vAttLocation);\n\t    gl.vertexAttribPointer(vAttLocation, 3, gl.FLOAT, false, 0, 0);\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, vIndex);\n\t\n\t    // その他の初期化\n\t    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\t    mx = 0.5;my = 0.5;\n\t    startTime = new Date().getTime();\n\t\n\t    // レンダリング関数呼出\n\t    render();\n\t};\n\t\n\t// checkbox\n\tfunction checkChange(e) {\n\t    run = e.currentTarget.checked;\n\t    if (run) {\n\t        startTime = new Date().getTime();\n\t        render();\n\t    } else {\n\t        tempTime += time;\n\t    }\n\t}\n\t\n\t// mouse\n\tfunction mouseMove(e) {\n\t    mx = e.offsetX / cw;\n\t    my = e.offsetY / ch;\n\t}\n\t\n\t// レンダリングを行う関数\n\tfunction render() {\n\t    // フラグチェック\n\t    if (!run) {\n\t        return;\n\t    }\n\t\n\t    // 時間管理\n\t    time = (new Date().getTime() - startTime) * 0.001;\n\t\n\t    // カラーバッファをクリア\n\t    gl.clear(gl.COLOR_BUFFER_BIT);\n\t\n\t    // uniform 関連\n\t    gl.uniform1f(uniLocation[0], time + tempTime);\n\t    gl.uniform2fv(uniLocation[1], [mx, my]);\n\t    gl.uniform2fv(uniLocation[2], [cw, ch]);\n\t\n\t    // 描画\n\t    gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n\t    gl.flush();\n\t\n\t    // 再帰\n\t    setTimeout(render, fps);\n\t}\n\t\n\t// シェーダを生成する関数\n\tfunction create_shader(id) {\n\t    // シェーダを格納する変数\n\t    var shader;\n\t\n\t    // HTMLからscriptタグへの参照を取得\n\t    var scriptElement = document.getElementById(id);\n\t\n\t    // scriptタグが存在しない場合は抜ける\n\t    if (!scriptElement) {\n\t        return;\n\t    }\n\t\n\t    // scriptタグのtype属性をチェック\n\t    switch (scriptElement.type) {\n\t\n\t        // 頂点シェーダの場合\n\t        case 'x-shader/x-vertex':\n\t            shader = gl.createShader(gl.VERTEX_SHADER);\n\t            break;\n\t\n\t        // フラグメントシェーダの場合\n\t        case 'x-shader/x-fragment':\n\t            shader = gl.createShader(gl.FRAGMENT_SHADER);\n\t            break;\n\t        default:\n\t            return;\n\t    }\n\t\n\t    // 生成されたシェーダにソースを割り当てる\n\t    gl.shaderSource(shader, scriptElement.text);\n\t\n\t    // シェーダをコンパイルする\n\t    gl.compileShader(shader);\n\t\n\t    // シェーダが正しくコンパイルされたかチェック\n\t    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\n\t        // 成功していたらシェーダを返して終了\n\t        return shader;\n\t    } else {\n\t\n\t        // 失敗していたらエラーログをアラートしコンソールに出力\n\t        alert(gl.getShaderInfoLog(shader));\n\t        console.log(gl.getShaderInfoLog(shader));\n\t    }\n\t}\n\t\n\t// プログラムオブジェクトを生成しシェーダをリンクする関数\n\tfunction create_program(vs, fs) {\n\t    // プログラムオブジェクトの生成\n\t    var program = gl.createProgram();\n\t\n\t    // プログラムオブジェクトにシェーダを割り当てる\n\t    gl.attachShader(program, vs);\n\t    gl.attachShader(program, fs);\n\t\n\t    // シェーダをリンク\n\t    gl.linkProgram(program);\n\t\n\t    // シェーダのリンクが正しく行なわれたかチェック\n\t    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n\t\n\t        // 成功していたらプログラムオブジェクトを有効にする\n\t        gl.useProgram(program);\n\t\n\t        // プログラムオブジェクトを返して終了\n\t        return program;\n\t    } else {\n\t\n\t        // 失敗していたら NULL を返す\n\t        return null;\n\t    }\n\t}\n\t\n\t// VBOを生成する関数\n\tfunction create_vbo(data) {\n\t    // バッファオブジェクトの生成\n\t    var vbo = gl.createBuffer();\n\t\n\t    // バッファをバインドする\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n\t\n\t    // バッファにデータをセット\n\t    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\n\t\n\t    // バッファのバインドを無効化\n\t    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\n\t    // 生成した VBO を返して終了\n\t    return vbo;\n\t}\n\t\n\t// IBOを生成する関数\n\tfunction create_ibo(data) {\n\t    // バッファオブジェクトの生成\n\t    var ibo = gl.createBuffer();\n\t\n\t    // バッファをバインドする\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n\t\n\t    // バッファにデータをセット\n\t    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Int16Array(data), gl.STATIC_DRAW);\n\t\n\t    // バッファのバインドを無効化\n\t    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\t\n\t    // 生成したIBOを返して終了\n\t    return ibo;\n\t}\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 23689d6cf0425e5fce1d","var cats = require('./main.js');\n\n// console.log(cats);\n\n\n// WEBPACK FOOTER //\n// ./src/js/app.js","// sample_068\n//\n// GLSL だけでレンダリングする\n\n// GLSL サンプルの(ほぼ)共通仕様 =============================================\n//\n// ・シェーダのコンパイルに失敗した場合は auto run を無効にします\n// ・auto run は 30fps になっているので環境と負荷に応じて適宜変更しましょう\n// ・uniform 変数は以下のようにシェーダへ送られます\n//     ・time: 経過時間を秒単位(ミリ秒は小数点以下)で送る(float)\n//     ・mouse: マウス座標を canvas 左上原点で 0 ～ 1 の範囲で送る(vec2)\n//     ・resolution: スクリーンの縦横の幅をピクセル単位で送る(vec2)\n// ・シェーダのコンパイルに失敗した場合エラー内容をアラートとコンソールに出力\n// ・シェーダのエラーで表示される行番号は一致するように HTML を書いてあります\n//\n// ============================================================================\n\n// global\nvar c, cw, ch, mx, my, gl, run, eCheck;\nvar startTime;\nvar time = 0.0;\nvar tempTime = 0.0;\nvar fps = 1000 / 30;\nvar uniLocation = new Array();\n\n// onload\nwindow.onload = function(){\n    // canvas エレメントを取得\n    c = document.getElementById('canvas');\n\n    // canvas サイズ\n    cw = 512; ch = 512;\n    c.width = cw; c.height = ch;\n\n    // エレメントを取得\n    eCheck = document.getElementById('check');\n\n    // イベントリスナー登録\n    c.addEventListener('mousemove', mouseMove, true);\n    eCheck.addEventListener('change', checkChange, true);\n\n    // WebGL コンテキストを取得\n    gl = c.getContext('webgl') || c.getContext('experimental-webgl');\n\n    // シェーダ周りの初期化\n    var prg = create_program(create_shader('vs'), create_shader('fs'));\n    run = (prg != null); if(!run){eCheck.checked = false;}\n    uniLocation[0] = gl.getUniformLocation(prg, 'time');\n    uniLocation[1] = gl.getUniformLocation(prg, 'mouse');\n    uniLocation[2] = gl.getUniformLocation(prg, 'resolution');\n\n    // 頂点データ回りの初期化\n    var position = [\n        -1.0,  1.0,  0.0,\n        1.0,  1.0,  0.0,\n        -1.0, -1.0,  0.0,\n        1.0, -1.0,  0.0\n    ];\n    var index = [\n        0, 2, 1,\n        1, 2, 3\n    ];\n    var vPosition = create_vbo(position);\n    var vIndex = create_ibo(index);\n    var vAttLocation = gl.getAttribLocation(prg, 'position');\n    gl.bindBuffer(gl.ARRAY_BUFFER, vPosition);\n    gl.enableVertexAttribArray(vAttLocation);\n    gl.vertexAttribPointer(vAttLocation, 3, gl.FLOAT, false, 0, 0);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, vIndex);\n\n    // その他の初期化\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    mx = 0.5; my = 0.5;\n    startTime = new Date().getTime();\n\n    // レンダリング関数呼出\n    render();\n};\n\n// checkbox\nfunction checkChange(e){\n    run = e.currentTarget.checked;\n    if(run){\n        startTime = new Date().getTime();\n        render();\n    }else{\n        tempTime += time;\n    }\n}\n\n// mouse\nfunction mouseMove(e){\n    mx = e.offsetX / cw;\n    my = e.offsetY / ch;\n}\n\n// レンダリングを行う関数\nfunction render(){\n    // フラグチェック\n    if(!run){return;}\n\n    // 時間管理\n    time = (new Date().getTime() - startTime) * 0.001;\n\n    // カラーバッファをクリア\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    // uniform 関連\n    gl.uniform1f(uniLocation[0], time + tempTime);\n    gl.uniform2fv(uniLocation[1], [mx, my]);\n    gl.uniform2fv(uniLocation[2], [cw, ch]);\n\n    // 描画\n    gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    gl.flush();\n\n    // 再帰\n    setTimeout(render, fps);\n}\n\n// シェーダを生成する関数\nfunction create_shader(id){\n    // シェーダを格納する変数\n    var shader;\n\n    // HTMLからscriptタグへの参照を取得\n    var scriptElement = document.getElementById(id);\n\n    // scriptタグが存在しない場合は抜ける\n    if(!scriptElement){return;}\n\n    // scriptタグのtype属性をチェック\n    switch(scriptElement.type){\n\n        // 頂点シェーダの場合\n        case 'x-shader/x-vertex':\n            shader = gl.createShader(gl.VERTEX_SHADER);\n            break;\n\n        // フラグメントシェーダの場合\n        case 'x-shader/x-fragment':\n            shader = gl.createShader(gl.FRAGMENT_SHADER);\n            break;\n        default :\n            return;\n    }\n\n    // 生成されたシェーダにソースを割り当てる\n    gl.shaderSource(shader, scriptElement.text);\n\n    // シェーダをコンパイルする\n    gl.compileShader(shader);\n\n    // シェーダが正しくコンパイルされたかチェック\n    if(gl.getShaderParameter(shader, gl.COMPILE_STATUS)){\n\n        // 成功していたらシェーダを返して終了\n        return shader;\n    }else{\n\n        // 失敗していたらエラーログをアラートしコンソールに出力\n        alert(gl.getShaderInfoLog(shader));\n        console.log(gl.getShaderInfoLog(shader));\n    }\n}\n\n// プログラムオブジェクトを生成しシェーダをリンクする関数\nfunction create_program(vs, fs){\n    // プログラムオブジェクトの生成\n    var program = gl.createProgram();\n\n    // プログラムオブジェクトにシェーダを割り当てる\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n\n    // シェーダをリンク\n    gl.linkProgram(program);\n\n    // シェーダのリンクが正しく行なわれたかチェック\n    if(gl.getProgramParameter(program, gl.LINK_STATUS)){\n\n        // 成功していたらプログラムオブジェクトを有効にする\n        gl.useProgram(program);\n\n        // プログラムオブジェクトを返して終了\n        return program;\n    }else{\n\n        // 失敗していたら NULL を返す\n        return null;\n    }\n}\n\n// VBOを生成する関数\nfunction create_vbo(data){\n    // バッファオブジェクトの生成\n    var vbo = gl.createBuffer();\n\n    // バッファをバインドする\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n\n    // バッファにデータをセット\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\n\n    // バッファのバインドを無効化\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    // 生成した VBO を返して終了\n    return vbo;\n}\n\n// IBOを生成する関数\nfunction create_ibo(data){\n    // バッファオブジェクトの生成\n    var ibo = gl.createBuffer();\n\n    // バッファをバインドする\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n\n    // バッファにデータをセット\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Int16Array(data), gl.STATIC_DRAW);\n\n    // バッファのバインドを無効化\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    // 生成したIBOを返して終了\n    return ibo;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js"],"sourceRoot":""}